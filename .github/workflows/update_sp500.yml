name: 🇺🇸 Update SP500 Data

on:
  # Run daily at 02:10 UTC (10 minutes after TA125 to avoid conflicts)
  schedule:
    - cron: '0 02 * * *'
  
  # Allow manual trigger
  workflow_dispatch:

jobs:
  update-sp500:
    runs-on: ubuntu-latest
    timeout-minutes: 180  # 3 hour timeout for 500+ symbols
    
    steps:
    - name: 🛎️ Checkout Repository
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: 📦 Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
        
    - name: 🇺🇸 Fetch SP500 Stock Data
      run: |
        echo "🇺🇸 Starting SP500 data fetch..."
        echo "📅 Current time: $(date -u)"
        echo "📊 Expected duration: ~110 minutes for ~500 symbols"
        echo "⚠️  This is a long-running process due to API rate limits"
        
        mkdir -p public
        python fetch_sp500_data.py
        
        echo "📋 SP500 files generated:"
        ls -la public/
        
        if [ -f "public/sp500_ohlcv_latest.json" ]; then
          echo "✅ SP500 file created successfully"
          echo "📊 File size: $(du -h public/sp500_ohlcv_latest.json)"
        else
          echo "❌ SP500 file not found!"
          exit 1
        fi
      env:
        ALPHA_VANTAGE_API_KEY: ${{ secrets.ALPHA_VANTAGE_API_KEY }}
    
    - name: 🔧 Setup Node.js for Firebase
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: 📦 Install Firebase CLI
      run: npm install -g firebase-tools
    
    - name: 🚀 Deploy SP500 Data to Firebase
      run: |
        echo "🚀 Deploying SP500 data to Firebase..."
        firebase deploy --only hosting --token "$FIREBASE_TOKEN" --non-interactive
        
        echo "✅ SP500 deployment complete!"
        echo "🌐 SP500 API: https://${{ secrets.FIREBASE_PROJECT_ID }}.web.app/sp500_ohlcv_latest.json"
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
    
    - name: 📊 SP500 Summary Report
      if: always()
      run: |
        echo "📊 SP500 DEPLOYMENT SUMMARY"
        echo "=========================="
        echo "⏰ Completed at: $(date -u)"
        echo "🇺🇸 Market: SP500 (US Markets)"
        
        if [ -f "public/sp500_ohlcv_latest.json" ]; then
          python -c "
        import json
        try:
          with open('public/sp500_ohlcv_latest.json', 'r') as f:
            data = json.load(f)
            total = data.get('total_symbols', 0)
            success = data.get('successful_symbols', 0)
            rate = (success/total*100) if total > 0 else 0
            print(f'📈 SP500: {success}/{total} symbols ({rate:.1f}% success)')
            print(f'💱 Currency: {data.get(\"currency\", \"USD\")}')
            print(f'🏢 Exchange: {data.get(\"exchange\", \"NASDAQ/NYSE\")}')
            if data.get('failed_symbols'):
              failed_count = len(data['failed_symbols'])
              print(f'❌ Failed: {failed_count} symbols')
        except Exception as e:
          print(f'❌ Error reading SP500 file: {e}')
        "
        else
          echo "❌ SP500 file not found"
        fi
        
        echo "🌐 SP500 Endpoint: https://${{ secrets.FIREBASE_PROJECT_ID }}.web.app/sp500_ohlcv_latest.json"
        echo "📱 Ready for Flutter app integration!"
